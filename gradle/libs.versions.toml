[versions]
# Kotlin
kotlin-version = "1.9.22"
kotlin-coroutines = "1.7.2"
kotlin-android-application = "8.0.1"
kotlin-serialization-json = "1.5.1"

# Androidx
androidx-compose-bom = "2024.04.00"
androidx-room = "2.5.2"
androidx-activity-compose = "1.8.2"
leakcanary = "2.9.1"
horologist-datalayer = "0.5.3"

# Google
google-coroutinesPlayServices = "1.7.2"
google-auth = "20.6.0"
google-crashlytics = "2.9.8"
google-services = "4.3.15"
google-accompanist = "0.31.0-alpha"
google-firebase-bom = "32.2.2"

# Yandex
yandex-ads = "5.7.0"

# Testw
tests-assertk = "0.25"
tests-turbine = "1.0.0"

# Other
ktor = "2.3.2-eap-692"
coil = "2.2.2"

# klibs
klibs-mikro = "1.5.0"
klibs-kstorage = "1.0.0"
klibs-kdi = "1.1.0"

# Compose
kotlin-compose = "1.6.0"

# Moko
moko-mvvm = "0.16.1"
moko-resources = "0.23.0"
moko-network = "0.21.0"

# Decompose
decompose = "2.2.2"
essenty = "1.1.0"

# MVIKotlin
mvikotlin = "3.2.1"

# Settings
mppsettings = "1.0.0"

[libraries]
# klibs
klibs-mikro-core = { module = "ru.astrainteractive.klibs:mikro-core", version.ref = "klibs-mikro" }
klibs-mikro-platform = { module = "ru.astrainteractive.klibs:mikro-platform", version.ref = "klibs-mikro" }
klibs-mikro-extensions = { module = "ru.astrainteractive.klibs:mikro-extensions", version.ref = "klibs-mikro" }
klibs-kstorage = { module = "ru.astrainteractive.klibs:kstorage", version.ref = "klibs-kstorage" }
klibs-kdi = { module = "ru.astrainteractive.klibs:kdi", version.ref = "klibs-kdi" }
klibs-paging = { module = "ru.astrainteractive.klibs:paging", version.strictly = "2.1.0" }

# Settings
mppsettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "mppsettings" }

# MVIKotlin
mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlin-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }

# Decompose
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose-jetpack = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
decompose-compose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }
essenty = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
# Kotlin
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.strictly = "0.4.0" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json" }
kotlin-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "google-coroutinesPlayServices" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# Androidx
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }

# Google
google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "google-firebase-bom" }
google-firebase-crsahlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
google-firebase-crsahlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "google-crashlytics" }
google-gms-services-gradle = { module = "com.google.gms:google-services", version.ref = "google-services" }
google-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "google-auth" }
google-accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "google-accompanist" }
google-accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "google-accompanist" }
google-horologist-datalayer = { module = "com.google.android.horologist:horologist-datalayer", version.ref = "horologist-datalayer" }
google-horologist-datalayer-watch = { module = "com.google.android.horologist:horologist-datalayer-watch", version.ref = "horologist-datalayer" }
google-horologist-datalayer-phone = { module = "com.google.android.horologist:horologist-datalayer-phone", version.ref = "horologist-datalayer" }
# Tests
tests-assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "tests-assertk" }
tests-turbine = { module = "app.cash.turbine:turbine", version.ref = "tests-turbine" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-contentNegitiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Moko`
moko-network-generator = { module = "dev.icerock.moko:network-generator", version.ref = "moko-network" }
moko-mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko-mvvm" }
moko-mvvm-flow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "moko-mvvm" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
moko-resources-core = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }

# Compose ext
composeext-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.strictly = "1.2.0" }

[plugins]
# Kotlin
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-version" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin-version" }
kotlin-compose = { id = "org.jetbrains.compose", version.ref = "kotlin-compose" }

# Android
android-library = { id = "com.android.application", version.ref = "kotlin-android-application" }
android-application = { id = "com.android.library", version.ref = "kotlin-android-application" }

# Gradle
gradle-buildconfig = { id = "com.github.gmazzo.buildconfig", version.strictly = "3.1.0" }
